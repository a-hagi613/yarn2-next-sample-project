# name: Build and Test
# on: [push]

# jobs:
#   build:
#     runs-on: ubuntu-latest
    
#     steps:
#       - uses: actions/checkout@v3
      
#       - name: Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '16.x'
          
#       - name: Get Yarn cache directory path
#         id: yarn-cache-dir-path
#         run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT      
      
#       # Cache dependencies
#       - name: Cache Yarn dependencies
#         uses: actions/cache@v3
#         with:
#           path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn-
            
#       - name: Install dependencies
#         run: yarn install --immutable
        
#       # - name: Run tests
#       #   run: yarn test

name: Caching with yarn
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node modules
        id: cache-yarn
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: $ {{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-build-${{ env.cache-name }}\-${{ hashFiles('**/yarn.lock') }}
          restore-keys:
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-yarn.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: yarn list

      - name: Install dependencies
        run: yarn install

      - name: Build
        run: yarn run build



